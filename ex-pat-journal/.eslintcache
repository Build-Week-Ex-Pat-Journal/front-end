[{"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/index.js":"1","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/App.js":"2","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/theme.js":"3","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/reducers/index.js":"4","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/PrivateRoute.js":"5","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/NavBar.js":"6","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/RegisterForm.js":"7","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/NewPostForm.js":"8","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/Posts.js":"9","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/LoginForm.js":"10","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/registerschema.js":"11","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/loginschema.js":"12","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/Post.js":"13","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/actions/index.js":"14","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/utils/axiosWithAuth.js":"15","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/MyPosts.js":"16","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/MyPost.js":"17"},{"size":664,"mtime":1609895570157,"results":"18","hashOfConfig":"19"},{"size":1007,"mtime":1609998352597,"results":"20","hashOfConfig":"19"},{"size":459,"mtime":1609895570155,"results":"21","hashOfConfig":"19"},{"size":2230,"mtime":1609998321276,"results":"22","hashOfConfig":"19"},{"size":431,"mtime":1609998301733,"results":"23","hashOfConfig":"19"},{"size":1682,"mtime":1609998310093,"results":"24","hashOfConfig":"19"},{"size":5932,"mtime":1609895570155,"results":"25","hashOfConfig":"19"},{"size":1706,"mtime":1609998298605,"results":"26","hashOfConfig":"19"},{"size":1754,"mtime":1609974094659,"results":"27","hashOfConfig":"19"},{"size":5113,"mtime":1609980526495,"results":"28","hashOfConfig":"19"},{"size":699,"mtime":1609783987576,"results":"29","hashOfConfig":"19"},{"size":332,"mtime":1609895570158,"results":"30","hashOfConfig":"19"},{"size":1318,"mtime":1609969085853,"results":"31","hashOfConfig":"19"},{"size":2923,"mtime":1609997993990,"results":"32","hashOfConfig":"19"},{"size":270,"mtime":1609801719495,"results":"33","hashOfConfig":"19"},{"size":1442,"mtime":1609998187132,"results":"34","hashOfConfig":"19"},{"size":4110,"mtime":1609998191168,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"d9mmez",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/index.js",[],["74","75"],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/App.js",["76","77","78","79"],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/theme.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/reducers/index.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/PrivateRoute.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/NavBar.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/RegisterForm.js",["80"],"import React, { useState, useEffect } from \"react\";\nimport Posts from \"./Posts\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport registerschema from \"../registerschema\";\nimport styled from \"styled-components\";\n\nconst initialRegisterFormValues = {\n  fname: \"\",\n  lname: \"\",\n  email: \"\",\n  username: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst initialRegisterErrors = {\n  fname: \"\",\n  lname: \"\",\n  email: \"\",\n  username: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst initialRegisterDisabled = true;\n\nfunction RegisterForm(props) {\n  //////////////// STATES ////////////////\n  const [registerDisabled, setRegisterDisabled] = useState(\n    initialRegisterDisabled\n  );\n  const [registerErrors, setRegisterErrors] = useState(initialRegisterErrors);\n  const [registerFormValues, setRegisterFormValues] = useState(\n    initialRegisterFormValues\n  );\n\n  //////////////// EVENT HANDLERS ////////////////\n\n  const registerInputChange = (name, value) => {\n    yup\n      .reach(registerschema, name)\n      .validate(value) // validate this value\n      .then(() => {\n        // happy path and clear the error\n        setRegisterErrors({\n          ...registerErrors,\n          [name]: \"\",\n        });\n      })\n      // if the validation is unsuccessful, we can set the error message to the message\n      // returned from yup (that we created in our schema)\n      .catch((err) => {\n        setRegisterErrors({\n          ...registerErrors,\n          // validation error from schema\n          [name]: err.errors[0],\n        });\n      });\n\n    setRegisterFormValues({\n      ...registerFormValues,\n      [name]: value, // NOT AN ARRAY\n    });\n  };\n\n  const onChange = (evt) => {\n    const { name, value } = evt.target;\n    registerInputChange(name, value);\n  };\n\n  const register = (e) => {\n    e.preventDefault();\n\n    // Because backend is not currently built to hold\n    // fname, lname, and email, as of 1/4/21\n    const abbreviatedRegistrationCredentials = {\n      username: registerFormValues.username,\n      password: registerFormValues.password,\n    };\n    console.log(abbreviatedRegistrationCredentials);\n\n    axios\n      .post(\n        \"https://expatjournal2021.herokuapp.com/api/register\",\n        abbreviatedRegistrationCredentials\n      )\n      .then((res) => {\n        console.log(res);\n        props.history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  //////////////// SIDE EFFECTS ////////////////\n\n  useEffect(() => {\n    registerschema.isValid(registerFormValues).then((valid) => {\n      setRegisterDisabled(!valid);\n    });\n  }, [registerFormValues]);\n\n  return (\n    <StyledRegister>\n      <div className=\"Form\">\n        <div style={{ color: \"red\" }} className=\"errors\">\n          {registerErrors.fname}\n          <br />\n          {registerErrors.lname}\n          <br />\n          {registerErrors.email}\n          <br />\n          {registerErrors.username}\n          <br />\n          {registerErrors.password}\n          <br />\n          {registerErrors.confirmPassword}\n          <br />\n        </div>\n        <form className=\"form container\" onSubmit={register}>\n          <h1>Registration</h1>\n          <label className=\"name\">\n            First Name:\n            <input\n              value={registerFormValues.fname}\n              onChange={onChange}\n              name=\"fname\"\n              type=\"text\"\n            />\n          </label>\n\n          <label className=\"name\">\n            Last Name:\n            <input\n              value={registerFormValues.lname}\n              onChange={onChange}\n              name=\"lname\"\n              type=\"text\"\n            />\n          </label>\n\n          <label className=\"name\">\n            Email:\n            <input\n              value={registerFormValues.email}\n              onChange={onChange}\n              name=\"email\"\n              type=\"text\"\n            />\n          </label>\n\n          <label className=\"name\">\n            Username:\n            <input\n              value={registerFormValues.username}\n              onChange={onChange}\n              name=\"username\"\n              type=\"text\"\n            />\n          </label>\n\n          <label className=\"name\">\n            Password:\n            <input\n              value={registerFormValues.password}\n              onChange={onChange}\n              name=\"password\"\n              type=\"password\"\n            />\n          </label>\n\n          <label className=\"name\">\n            Confirm Password:\n            <input\n              value={registerFormValues.confirmPassword}\n              onChange={onChange}\n              name=\"confirmPassword\"\n              type=\"password\"\n            />\n          </label>\n\n          <button className=\"loginButton\" disabled={registerDisabled}>\n            register\n          </button>\n        </form>\n      </div>\n    </StyledRegister>\n  );\n}\n\nexport default RegisterForm;\n\nconst StyledRegister = styled.div`\n  background-color: ${(pr) => pr.theme.backColor};\n  .container {\n    color: ${(pr) => pr.theme.textColor};\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-content: center;\n    border: black solid 2px;\n    background-color: #f0f8ff;\n    width: 95%;\n    margin: 0 auto;\n  }\n  .errors {\n    text-align: center;\n    text-decoration: underline;\n    line-height: 20px;\n    font-weight: 500;\n  }\n  h1 {\n    text-align: center;\n    text-decoration: underline;\n    color: ${(pr) => pr.theme.titleColor};\n    font-size: 5em;\n  }\n  .name {\n    display: flex;\n    justify-content: space-between;\n    margin: 2% auto;\n    width: 50%;\n    text-align: center;\n  }\n  button {\n    background-color: ${(pr) => pr.theme.btnColor};\n    padding: ${(pr) => pr.theme.padding.medium};\n    width: ${(pr) => pr.theme.width.small};\n    margin: 1% auto;\n    &:hover {\n      background-color: ${(pr) => pr.theme.secondBtnColor};\n    } /* hover closed */\n  } /* button closed*/\n`; //stylist closed\n","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/NewPostForm.js",["81","82","83","84","85"],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/Posts.js",["86","87","88"],"import React, { useState, useEffect } from 'react';\nimport Post from './Post';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components'\n\n// import {  fetchAllPosts, addPost, setCurrentUsername } from './../actions';\n\nimport { fetchAllPosts } from './../actions';\n\n//////////////// INITIAL STATES ////////////////\n\nfunction Posts(props) {\n    console.log(props)\n    // const { fetchAllPosts } = props;\n\n    useEffect(() => {\n        props.fetchAllPosts();\n            // .then(res => {\n            //     console.log(res);\n\n            // })\n    }, [])\n\n\n///// STYLING ////////    \n    const PostsWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;    \n    `\n    const PageWrapper = styled.div`\n    width: 100%;\n    h2 {\n        margin-left:5%;\n    }\n    `\n\n    return(\n        <PageWrapper>\n            <h2>All Posts:</h2>\n            <PostsWrapper>\n            {\n                props.isLoading ? (<div>Loading</div>) \n                : (props.allPosts.map((post, id) => (\n                    <Post key={id} post={post}/>\n                )))  \n            }\n            </PostsWrapper>\n        </PageWrapper>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.isLoading,\n        allPosts: state.allPosts\n    }\n};\n\nexport default connect(mapStateToProps, {fetchAllPosts})(Posts);\n\n// {\n//     allPosts: [\n//         {\n//             username: \"\",\n//             photo: \"\",\n//             story: \"\"\n//         }\n//     ]\n// }\n\n\n// export default Posts;\n\n{/* <Posts currentUser={currentUser} setCurrentUser={setCurrentUser} currentPost={currentPost} setCurrentPost={setCurrentPost} posts={posts} setPosts={setPosts} userList={userList} setUserList={setUserList}/>  */}\n","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/LoginForm.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/registerschema.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/loginschema.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/Post.js",["89"],"import React, { useState } from \"react\";\nimport styled from 'styled-components'\n\nconst initialIsEditing = false;\n\nfunction Post(props){\n    const [isEditing, setIsEditing] = useState(initialIsEditing)\n    const {post, id} = props\n\n\n    const PostWrapper = styled.div`\n    border: 2px solid black;\n    box-shadow: 5px 10px #888888;\n    margin: 5% auto;\n    width: 30%;\n    border-radius:10px;\n    @media (max-width: 1800px) {\n        margin: 5% auto;\n        width: 40%;\n    }\n    @media (max-width: 1300px) {\n        margin: 5% auto;\n        width: 80%;\n    }\n    `\n    const ImgWrapper = styled.div`\n    width: 90%;\n    text-align: center;\n    margin: 2% auto;\n    `\n    const TextContentWrapper = styled.div`\n    padding-right: 5%;\n    padding-left: 5%;`\n\n    return(\n        isEditing ? <p>A Post Form</p> \n        \n        :\n                    <PostWrapper key={id} className='post-card'>\n                        <ImgWrapper>\n                            <img src={post.image} alt=\"uploaded\" style={{maxWidth: \"100%\"}}/>\n                        </ImgWrapper>\n                        <TextContentWrapper>\n                            <h4>{post.user_id}</h4>\n                            <p>{post.story}</p>\n                        </TextContentWrapper>\n                    </PostWrapper>\n    )\n}\n\nexport default Post;","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/actions/index.js",["90"],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/utils/axiosWithAuth.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/MyPosts.js",["91","92"],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/MyPost.js",["93","94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":18,"nodeType":"102","messageId":"103","endLine":2,"endColumn":26},{"ruleId":"100","severity":1,"message":"104","line":2,"column":28,"nodeType":"102","messageId":"103","endLine":2,"endColumn":37},{"ruleId":"100","severity":1,"message":"105","line":12,"column":8,"nodeType":"102","messageId":"103","endLine":12,"endColumn":13},{"ruleId":"100","severity":1,"message":"106","line":14,"column":42,"nodeType":"102","messageId":"103","endLine":14,"endColumn":46},{"ruleId":"100","severity":1,"message":"107","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"100","severity":1,"message":"104","line":1,"column":28,"nodeType":"102","messageId":"103","endLine":1,"endColumn":37},{"ruleId":"100","severity":1,"message":"107","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"100","severity":1,"message":"105","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":13},{"ruleId":"100","severity":1,"message":"108","line":4,"column":13,"nodeType":"102","messageId":"103","endLine":4,"endColumn":16},{"ruleId":"100","severity":1,"message":"109","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":22,"column":8,"nodeType":"112","endLine":22,"endColumn":10,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":75,"column":1,"nodeType":"116","messageId":"117","endLine":75,"endColumn":214},{"ruleId":"100","severity":1,"message":"118","line":7,"column":23,"nodeType":"102","messageId":"103","endLine":7,"endColumn":35},{"ruleId":"100","severity":1,"message":"105","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":15,"column":8,"nodeType":"112","endLine":15,"endColumn":10,"suggestions":"119"},{"ruleId":"100","severity":1,"message":"120","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":23},{"ruleId":"100","severity":1,"message":"121","line":5,"column":10,"nodeType":"102","messageId":"103","endLine":5,"endColumn":19},{"ruleId":"100","severity":1,"message":"122","line":5,"column":21,"nodeType":"102","messageId":"103","endLine":5,"endColumn":31},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'Posts' is defined but never used.","'yup' is defined but never used.","'registerschema' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["125"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'setIsEditing' is assigned a value but never used.",["126"],"'axiosWithAuth' is defined but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"127","fix":"129"},"Update the dependencies array to be: [props]",{"range":"130","text":"131"},{"range":"132","text":"131"},[569,571],"[props]",[449,451]]