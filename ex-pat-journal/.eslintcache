[{"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/index.js":"1","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/App.js":"2","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/theme.js":"3","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/reducers/index.js":"4","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/PrivateRoute.js":"5","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/NavBar.js":"6","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/RegisterForm.js":"7","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/NewPostForm.js":"8","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/Posts.js":"9","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/LoginForm.js":"10","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/registerschema.js":"11","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/loginschema.js":"12","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/Post.js":"13","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/actions/index.js":"14","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/utils/axiosWithAuth.js":"15","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/MyPosts.js":"16","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/MyPost.js":"17"},{"size":664,"mtime":1609895570157,"results":"18","hashOfConfig":"19"},{"size":1007,"mtime":1609998352597,"results":"20","hashOfConfig":"19"},{"size":459,"mtime":1609895570155,"results":"21","hashOfConfig":"19"},{"size":2354,"mtime":1610006131411,"results":"22","hashOfConfig":"19"},{"size":431,"mtime":1609998301733,"results":"23","hashOfConfig":"19"},{"size":1682,"mtime":1609998310093,"results":"24","hashOfConfig":"19"},{"size":5932,"mtime":1609895570155,"results":"25","hashOfConfig":"19"},{"size":1884,"mtime":1610005959560,"results":"26","hashOfConfig":"19"},{"size":1825,"mtime":1610006434211,"results":"27","hashOfConfig":"19"},{"size":5113,"mtime":1609980526495,"results":"28","hashOfConfig":"19"},{"size":699,"mtime":1609783987576,"results":"29","hashOfConfig":"19"},{"size":332,"mtime":1609895570158,"results":"30","hashOfConfig":"19"},{"size":1724,"mtime":1610001810519,"results":"31","hashOfConfig":"19"},{"size":2923,"mtime":1609997993990,"results":"32","hashOfConfig":"19"},{"size":270,"mtime":1609801719495,"results":"33","hashOfConfig":"19"},{"size":1442,"mtime":1609998187132,"results":"34","hashOfConfig":"19"},{"size":4110,"mtime":1609998191168,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"d9mmez",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/index.js",[],["77","78"],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/App.js",["79","80","81","82"],"import './App.css';\nimport React,  { useState, useEffect} from 'react'; \n\n\nimport Posts from './components/Posts';\nimport LoginForm from './components/LoginForm';\nimport RegisterForm from './components/RegisterForm';\nimport NavBar from './components/NavBar';\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport NewPostForm from \"./components/NewPostForm\";\n\nimport axios from 'axios';\n\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport MyPosts from './components/MyPosts';\n\nfunction App() {\n\n  return (\n  <div>\n    <h1>Ex-Pat Journal</h1>\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={LoginForm} />\n        <Route exact path=\"/register\" component={RegisterForm} />\n        <PrivateRoute path=\"/all-posts\" component={Posts} />\n        <PrivateRoute path=\"/new-post\" component={NewPostForm} />\n        <PrivateRoute path=\"/my-posts\" component={MyPosts} />\n      </Switch>\n    </Router>\n  </div>\n  );\n}\n\nexport default App;\n","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/theme.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/reducers/index.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/PrivateRoute.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/NavBar.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/RegisterForm.js",["83"],"import React, { useState, useEffect } from \"react\";\nimport Posts from \"./Posts\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport registerschema from \"../registerschema\";\nimport styled from \"styled-components\";\n\nconst initialRegisterFormValues = {\n  fname: \"\",\n  lname: \"\",\n  email: \"\",\n  username: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst initialRegisterErrors = {\n  fname: \"\",\n  lname: \"\",\n  email: \"\",\n  username: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst initialRegisterDisabled = true;\n\nfunction RegisterForm(props) {\n  //////////////// STATES ////////////////\n  const [registerDisabled, setRegisterDisabled] = useState(\n    initialRegisterDisabled\n  );\n  const [registerErrors, setRegisterErrors] = useState(initialRegisterErrors);\n  const [registerFormValues, setRegisterFormValues] = useState(\n    initialRegisterFormValues\n  );\n\n  //////////////// EVENT HANDLERS ////////////////\n\n  const registerInputChange = (name, value) => {\n    yup\n      .reach(registerschema, name)\n      .validate(value) // validate this value\n      .then(() => {\n        // happy path and clear the error\n        setRegisterErrors({\n          ...registerErrors,\n          [name]: \"\",\n        });\n      })\n      // if the validation is unsuccessful, we can set the error message to the message\n      // returned from yup (that we created in our schema)\n      .catch((err) => {\n        setRegisterErrors({\n          ...registerErrors,\n          // validation error from schema\n          [name]: err.errors[0],\n        });\n      });\n\n    setRegisterFormValues({\n      ...registerFormValues,\n      [name]: value, // NOT AN ARRAY\n    });\n  };\n\n  const onChange = (evt) => {\n    const { name, value } = evt.target;\n    registerInputChange(name, value);\n  };\n\n  const register = (e) => {\n    e.preventDefault();\n\n    // Because backend is not currently built to hold\n    // fname, lname, and email, as of 1/4/21\n    const abbreviatedRegistrationCredentials = {\n      username: registerFormValues.username,\n      password: registerFormValues.password,\n    };\n    console.log(abbreviatedRegistrationCredentials);\n\n    axios\n      .post(\n        \"https://expatjournal2021.herokuapp.com/api/register\",\n        abbreviatedRegistrationCredentials\n      )\n      .then((res) => {\n        console.log(res);\n        props.history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  //////////////// SIDE EFFECTS ////////////////\n\n  useEffect(() => {\n    registerschema.isValid(registerFormValues).then((valid) => {\n      setRegisterDisabled(!valid);\n    });\n  }, [registerFormValues]);\n\n  return (\n    <StyledRegister>\n      <div className=\"Form\">\n        <div style={{ color: \"red\" }} className=\"errors\">\n          {registerErrors.fname}\n          <br />\n          {registerErrors.lname}\n          <br />\n          {registerErrors.email}\n          <br />\n          {registerErrors.username}\n          <br />\n          {registerErrors.password}\n          <br />\n          {registerErrors.confirmPassword}\n          <br />\n        </div>\n        <form className=\"form container\" onSubmit={register}>\n          <h1>Registration</h1>\n          <label className=\"name\">\n            First Name:\n            <input\n              value={registerFormValues.fname}\n              onChange={onChange}\n              name=\"fname\"\n              type=\"text\"\n            />\n          </label>\n\n          <label className=\"name\">\n            Last Name:\n            <input\n              value={registerFormValues.lname}\n              onChange={onChange}\n              name=\"lname\"\n              type=\"text\"\n            />\n          </label>\n\n          <label className=\"name\">\n            Email:\n            <input\n              value={registerFormValues.email}\n              onChange={onChange}\n              name=\"email\"\n              type=\"text\"\n            />\n          </label>\n\n          <label className=\"name\">\n            Username:\n            <input\n              value={registerFormValues.username}\n              onChange={onChange}\n              name=\"username\"\n              type=\"text\"\n            />\n          </label>\n\n          <label className=\"name\">\n            Password:\n            <input\n              value={registerFormValues.password}\n              onChange={onChange}\n              name=\"password\"\n              type=\"password\"\n            />\n          </label>\n\n          <label className=\"name\">\n            Confirm Password:\n            <input\n              value={registerFormValues.confirmPassword}\n              onChange={onChange}\n              name=\"confirmPassword\"\n              type=\"password\"\n            />\n          </label>\n\n          <button className=\"loginButton\" disabled={registerDisabled}>\n            register\n          </button>\n        </form>\n      </div>\n    </StyledRegister>\n  );\n}\n\nexport default RegisterForm;\n\nconst StyledRegister = styled.div`\n  background-color: ${(pr) => pr.theme.backColor};\n  .container {\n    color: ${(pr) => pr.theme.textColor};\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-content: center;\n    border: black solid 2px;\n    background-color: #f0f8ff;\n    width: 95%;\n    margin: 0 auto;\n  }\n  .errors {\n    text-align: center;\n    text-decoration: underline;\n    line-height: 20px;\n    font-weight: 500;\n  }\n  h1 {\n    text-align: center;\n    text-decoration: underline;\n    color: ${(pr) => pr.theme.titleColor};\n    font-size: 5em;\n  }\n  .name {\n    display: flex;\n    justify-content: space-between;\n    margin: 2% auto;\n    width: 50%;\n    text-align: center;\n  }\n  button {\n    background-color: ${(pr) => pr.theme.btnColor};\n    padding: ${(pr) => pr.theme.padding.medium};\n    width: ${(pr) => pr.theme.width.small};\n    margin: 1% auto;\n    &:hover {\n      background-color: ${(pr) => pr.theme.secondBtnColor};\n    } /* hover closed */\n  } /* button closed*/\n`; //stylist closed\n","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/NewPostForm.js",["84","85","86","87","88","89"],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/Posts.js",["90","91","92"],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/LoginForm.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/registerschema.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/loginschema.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/Post.js",["93"],"import React, { useState } from \"react\";\nimport styled from 'styled-components'\nimport ReadMoreReact from 'read-more-react';\nimport '../Post.css';\n\nconst initialIsEditing = false;\nconst minLength = 80;\nconst idealLength = 100;\nconst maxLength = 2000;\n\nfunction Post(props){\n    const [isEditing, setIsEditing] = useState(initialIsEditing)\n    const {post, id} = props\n\n\n    const PostWrapper = styled.div`\n    border: 2px solid black;\n    box-shadow: 5px 10px #888888;\n    margin: 5% auto;\n    width: 30%;\n    border-radius:10px;\n    @media (max-width: 1800px) {\n        margin: 5% auto;\n        width: 40%;\n    }\n    @media (max-width: 1300px) {\n        margin: 5% auto;\n        width: 80%;\n    }\n    `\n    const ImgWrapper = styled.div`\n    width: 90%;\n    text-align: center;\n    margin: 2% auto;\n    `\n    const TextContentWrapper = styled.div`\n    padding-right: 5%;\n    padding-left: 5%;\n    padding-bottom: 5%`\n\n    return(\n        isEditing ? <p>A Post Form</p> \n        \n        :\n                    <PostWrapper key={id} className='post-card'>\n                        <ImgWrapper>\n                            <img src={post.image} alt=\"uploaded\" style={{maxWidth: \"100%\"}}/>\n                        </ImgWrapper>\n                        <TextContentWrapper>\n                            <h4>{post.user_id}</h4>\n\n                            <ReadMoreReact text={post.story}\n                            min={minLength}\n                            ideal={idealLength}\n                            max={maxLength}\n                            readMoreText='Click Here to Read More, Click Again to Collapse'/>\n\n                        </TextContentWrapper>\n                    </PostWrapper>\n    )\n}\n\nexport default Post;","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/actions/index.js",["94"],"import axios from 'axios';\nimport { axiosWithAuth } from './../utils/axiosWithAuth';\n\nexport const API_ALL_POSTS_START = \"API_ALL_POSTS_START\";\nexport const API_GET_ALL_POSTS_SUCCESS = \"API_GET_ALL_POSTS_SUCCESS\";\n\nexport const API_POST_ALL_POSTS_SUCCESS = \"API_POST_ALL_POSTS_SUCCESS\";\nexport const API_ALL_POSTS_FAIL = \"API_ALL_POSTS_FAIL\";\n\nexport const SET_CURRENT_USERNAME = \"SET_CURRENT_USERNAME\";\n\nexport const API_DELETE_MY_POST_SUCCESS = \"API_DELETE_MY_POST_SUCCESS\";\n\nexport const API_PUT_MY_POSTS_SUCCESS = \"API_PUT_MY_POSTS_SUCCESS\";\n\n\nexport const fetchAllPosts = () => dispatch => {\n    dispatch({type:API_ALL_POSTS_START});\n\n    axiosWithAuth()\n        .get(\"https://expatjournal2021.herokuapp.com/posts\")\n        .then(res => {\n            dispatch({type:API_GET_ALL_POSTS_SUCCESS, payload:res.data});\n        })\n        .catch(err => dispatch({type:API_ALL_POSTS_FAIL, payload:err}));\n}\n\nexport const addPost = (newPost) => dispatch => {\n    axiosWithAuth()\n        .post(\"https://expatjournal2021.herokuapp.com/posts/\", newPost)\n        .then((res) => {\n            console.log(res.data);\n            dispatch({type:API_POST_ALL_POSTS_SUCCESS, payload:res.data});\n        })\n        .catch(err => dispatch({type:API_ALL_POSTS_FAIL, payload:err}));\n}\n\nexport const fetchMyPosts = (user_id) => dispatch => {\n    dispatch({type:API_ALL_POSTS_START});\n\n    axiosWithAuth()\n        .get(`https://expatjournal2021.herokuapp.com/${user_id}/posts/`)\n        .then(res => {\n            // console.log(res.data);\n            dispatch({type:API_GET_ALL_POSTS_SUCCESS, payload:res.data});\n        })\n        .catch(err => dispatch({type:API_ALL_POSTS_FAIL, payload:err}));\n}\n\nexport const editPost = (id, editedPost) => dispatch => {\n    \n    axiosWithAuth()\n        .put(`https://expatjournal2021.herokuapp.com/posts/${id}`, editedPost)\n        .then((res) => {\n            dispatch({type:API_PUT_MY_POSTS_SUCCESS, payload:res.data});\n            // dispatch({type:API_POST_ALL_POSTS_SUCCESS, payload:editedPost});\n        })\n        .catch(err => dispatch({type:API_ALL_POSTS_FAIL, payload:err}));\n}\n\nexport const deletePost = (id) => dispatch => {\n    axiosWithAuth()\n        .delete(`https://expatjournal2021.herokuapp.com/posts/${id}`)\n        .then((res) => {\n            // console.log(res);\n            // console.log(res);\n            dispatch({type:API_DELETE_MY_POST_SUCCESS, payload:id});\n        })\n        .catch(err => dispatch({type:API_ALL_POSTS_FAIL, payload:err}));\n}\n\nexport const setCurrentUsername = () => {\n    const currentUsernameLocalStorage = localStorage.getItem(\"currentUsernameLocalStorage\");\n    return {type:SET_CURRENT_USERNAME, payload:currentUsernameLocalStorage};\n}\n\n\n// const initialUser = {\n//     fname: '',\n//     lname: '',\n//     email: '',\n//     username: '',\n//     password: '',\n//     posts:[]\n//   }\n  \n//   const initialPost = {\n//     photo:'',\n//     story:''\n//   }","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/utils/axiosWithAuth.js",[],"/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/MyPosts.js",["95","96"],"import React, { useState, useEffect } from 'react';\nimport MyPost from './MyPost';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components'\n\n// import {  fetchMyPosts, editPost, fetchAllPosts, addPost, setCurrentUsername } from './../actions';\n\nimport { fetchAllPosts } from './../actions';\n\n//////////////// INITIAL STATES ////////////////\n\nfunction MyPosts(props) {\n    useEffect(() => {\n        props.fetchAllPosts();\n    }, [])\n\n\n///// STYLING ////////    \n    const PostsWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;    \n    `\n    const PageWrapper = styled.div`\n    width: 100%;\n    h2 {\n        margin-left:5%;\n    }\n    `\n\n    return(\n        <PageWrapper>\n            <h2>My Posts:</h2>\n            <PostsWrapper>\n            {\n                props.isLoading ? (<div>Loading</div>) \n                : (props.allPosts.map((post, idx) => (\n                    // <MyPost key={id} post={post}/>\n                    post.user_id === props.currentUsername ? \n                    <MyPost key={idx} post={post}/>\n                    : null\n                )))  \n            }\n            </PostsWrapper>\n        </PageWrapper>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.isLoading,\n        allPosts: state.allPosts,\n        currentUsername: state.currentUsername\n    }\n};\n\nexport default connect(mapStateToProps, {fetchAllPosts})(MyPosts);","/Users/joshualovins/Documents/Lambda/unit3/build/front-end/ex-pat-journal/src/components/MyPost.js",["97","98","99"],"import React, { useState } from \"react\";\nimport styled from 'styled-components'\nimport { connect } from 'react-redux';\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport { editPost, fetchAllPosts, deletePost } from './../actions';\n\nconst initialIsEditing = false;\n\nfunction MyPost(props){\n    const [formValues, setFormValues] = useState(props.post);\n    const [isEditing, setIsEditing] = useState(initialIsEditing)\n    const {post, idx} = props;\n\n    const PostWrapper = styled.div`\n    border: 2px solid black;\n    box-shadow: 5px 10px #888888;\n    margin: 5% auto;\n    width: 30%;\n    border-radius:10px;\n    @media (max-width: 1800px) {\n        margin: 5% auto;\n        width: 40%;\n    }\n    @media (max-width: 1300px) {\n        margin: 5% auto;\n        width: 80%;\n    }\n    `\n    const ImgWrapper = styled.div`\n    width: 90%;\n    text-align: center;\n    margin: 2% auto;\n    `\n    const TextContentWrapper = styled.div`\n    padding-right: 5%;\n    padding-left: 5%;`\n\n\n    const onChange = (evt) => {\n        const { name, value } = evt.target;\n        setFormValues({\n          ...formValues,\n          [name]: value\n        });\n    }\n\n    const saveEdit = e => {\n        e.preventDefault();\n        const editedPost = {\n            ...formValues\n        }\n        props.editPost(editedPost.id, editedPost);\n        props.fetchAllPosts(props.currentUsername);\n    }\n\n    const deletePost = () => {\n        console.log(formValues.id);\n        props.deletePost(formValues.id);\n    }\n\n    return(\n        <div className=\"container-outer\">\n            {isEditing ? (\n                // When I tried to apply to this form the styled component wrappers \n                // used on the post itself (i.e., the PostWrapper and ImgWrapper),\n                // I was getting a bug whereby the input would immediately unfocus\n                // when one char was written in it, so I reverted to css\n                // The relevant classes are in index.css. They all correspond to the styled\n                // component wrappers established elsewhere in this component.\n                    <form className=\"post-wrapper\" onSubmit={saveEdit}>\n                        <div className=\"input-wrapper\">\n                            <label>\n                                Image url:\n                                    <input\n                                        value={formValues.image}\n                                        onChange={onChange}\n                                        name=\"image\"\n                                        type=\"text\"\n                                    />\n                            </label>\n                        </div>\n                        <div className=\"input-wrapper\">\n                            <label>\n                                Story: \n                                <input\n                                value={formValues.story}\n                                onChange={onChange}\n                                name=\"story\"\n                                type=\"text\"\n                                />\n                            </label>\n                        </div>\n                        <div className=\"edit-post-button\">\n                            <button>Save</button>\n                        </div>\n                    </form>\n            )\n            : (<PostWrapper key={idx} className='post-card'>\n                <ImgWrapper>\n                    <img src={post.image} alt=\"uploaded\" style={{maxWidth: \"100%\"}}/>\n                </ImgWrapper>\n                <TextContentWrapper>\n                    <h4>{post.user_id}</h4>\n                    <p>{post.story}</p>\n                </TextContentWrapper>\n                <div className=\"edit-post-button\">\n                    <button onClick={() => setIsEditing(true)}>Edit Post</button>\n                    <button onClick={deletePost}>Delete Post</button>\n                </div>\n            </PostWrapper>)\n            }\n        </div>\n    )\n}\n\nexport default connect(null, {fetchAllPosts, editPost, deletePost})(MyPost);",{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":2,"column":18,"nodeType":"106","messageId":"107","endLine":2,"endColumn":26},{"ruleId":"104","severity":1,"message":"108","line":2,"column":28,"nodeType":"106","messageId":"107","endLine":2,"endColumn":37},{"ruleId":"104","severity":1,"message":"109","line":12,"column":8,"nodeType":"106","messageId":"107","endLine":12,"endColumn":13},{"ruleId":"104","severity":1,"message":"110","line":14,"column":42,"nodeType":"106","messageId":"107","endLine":14,"endColumn":46},{"ruleId":"104","severity":1,"message":"111","line":2,"column":8,"nodeType":"106","messageId":"107","endLine":2,"endColumn":13},{"ruleId":"104","severity":1,"message":"108","line":1,"column":28,"nodeType":"106","messageId":"107","endLine":1,"endColumn":37},{"ruleId":"104","severity":1,"message":"111","line":2,"column":8,"nodeType":"106","messageId":"107","endLine":2,"endColumn":13},{"ruleId":"104","severity":1,"message":"109","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":13},{"ruleId":"104","severity":1,"message":"112","line":4,"column":13,"nodeType":"106","messageId":"107","endLine":4,"endColumn":16},{"ruleId":"104","severity":1,"message":"113","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":22},{"ruleId":"104","severity":1,"message":"114","line":17,"column":21,"nodeType":"106","messageId":"107","endLine":17,"endColumn":33},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":24,"column":8,"nodeType":"117","endLine":24,"endColumn":10,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":77,"column":1,"nodeType":"121","messageId":"122","endLine":77,"endColumn":214},{"ruleId":"104","severity":1,"message":"123","line":12,"column":23,"nodeType":"106","messageId":"107","endLine":12,"endColumn":35},{"ruleId":"104","severity":1,"message":"109","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":13},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":15,"column":8,"nodeType":"117","endLine":15,"endColumn":10,"suggestions":"124"},{"ruleId":"104","severity":1,"message":"125","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":23},{"ruleId":"104","severity":1,"message":"126","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":19},{"ruleId":"104","severity":1,"message":"127","line":5,"column":21,"nodeType":"106","messageId":"107","endLine":5,"endColumn":31},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'Posts' is defined but never used.","'yup' is defined but never used.","'registerschema' is defined but never used.","'setSubmitted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["130"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'setIsEditing' is assigned a value but never used.",["131"],"'axiosWithAuth' is defined but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"132","fix":"134"},"Update the dependencies array to be: [props]",{"range":"135","text":"136"},{"range":"137","text":"136"},[640,642],"[props]",[449,451]]